네트워크(Network)
- 여러 대의 컴퓨터를 통신 회선으로 연결한 것.
  * 홈 네트워크 : 컴퓨터가 방마다 있고, 이들 컴퓨터를 유선, 무선 등의 통신 회선으로 연결.
  * 지역 네트워크 : 회사, 건물, 특정 영역에 존재하는 컴퓨터를 통신 회선으로 연결한 것.
  * 인터넷 : 지역 네트워크를 통신 회선으로 연결한 것.

서버와 클라이언트
- 서버 : - 서비스를 제공하는 프로그램
                 예) 웹 서버, FTP 서버, DBMS, 메신저 서버
        - 클라이언트의 연결을 수락하고, 요청 내용을 처리한 후 응답을 보내는 역할을 함.

- 클라이언트 : - 서비스를 받는 프로그램
                         예) 웹 브라우저, FTP 클라이언트, 메신저
             - 네트워크 데이터를 필요로 하는 모든 애플리케이션이 해당.

IP 주소와 포트
- IP(Internet Protocol) 주소
  * 네트워크 상에서 컴퓨터를 식별하는 번호
  * 네트워크 어뎁터(랜카드)마다 할당
  
- 포트(port)
  - 같은 컴퓨터 내에서 프로그램을 식별하는 번호.
  
- InetAddress로 IP 주소 얻기
  - InetAddress local = InetAddress.getLocalHost();
  
- TCP(Transmission Control Protocol)
  - 다른 두 시스템 간의 신뢰성이 있는 데이터의 전송을 관장하는 통신 프로토콜.
  - 연결 지향적 프로토콜 ==> 시간이 소요가 됨.
  - 통신 선로 고정 ==> 전송 속도가 느려질 수 있음.
  - 데이터를 정확하고 안정적으로 전달.
  
  IP 역할
  =>지정한 IP주소로 데이터를 전달.
  =>패킷이라는 통신 단위로 데이터 전달.(패킷에는 출발지 IP와 도착지 IP가 들어가 있다. 전송데이터와 함께.)
  =>패킷으로 짤라서 보내면 순서가 꼬일 위험성이 존재해서 TCP라는 개념이 등장! 
  
  -TCP는 출발지 IP, 도착지 IP 뿐만 아니라 그사이에 
  출발지 port, 도착지 port, 순서개념, 검증정보 까지 포함된다.
  =>Sync 정보(서버 살아있니?)를 보내고 Sync와 ack(웅! 잘살아있어~)를 받아줌. 그다음에 실질적인 데이터를 보내준다 .
  =>3way handshake. 정보를 보내려면 3번의 단계가 필요. 순서도 보내줌. => 복잡하고 시간이 많이 걸림
  
  -UDP는 순서는 보장안되고 무작위로 보냄. 그러나 속도는 빠름.
  
  PORT 
  -하나의 컴퓨터(하나의 IP)에서 프로그램별로 PORT를 나눠둠. IP 주소뒤에 ":숫자"  <-포트 번호
  =>프로세스를 구분하는 용도.

